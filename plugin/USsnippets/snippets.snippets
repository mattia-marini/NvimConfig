priority -50

# We use a little hack so that the snippet is expanded
# and parsed correctly
snippet usnip "Ultisnips snippet definition" b
`!p snip.rv = "snippet"` ${1:Tab_trigger} "${2:Description}" ${3:b}
${0:${VISUAL}}
`!p snip.rv = "endsnippet"`
endsnippet

snippet global "Global snippet" b
`!p snip.rv = "global"` !p
${0:${VISUAL}}
`!p snip.rv = "endglobal"`
endsnippet

snippet vis "${VISUAL}" i
\$\{VISUAL${1:${2:default}${3:/transform/}}\}
endsnippet

snippet "" "Virgoletta" A
"${VISUAL}"
endsnippet

snippet () "Virgoletta" A
(${VISUAL})
endsnippet

snippet {} "Virgoletta" A
{${VISUAL}}
endsnippet

snippet [] "Virgoletta" A
[${VISUAL}]
endsnippet

snippet comm "Comment" A
`!p 
a = snip.v.text
ans = "#"

for x in a:
    if x == '\n':
        ans+="\n#"
    else:
        ans+=x

snip.rv=ans[:-1]
`
endsnippet


snippet uncomm "Uncomment" A
`!p 
a = snip.v.text
ans=""
x=0
if a[0]=='#':
    x=1
else:
    x=0

while x<len(a):
    if a[x] == '\n':
        if x<len(a)-1 and a[x+1]=='#':
            ans+='\n'
            x+=1
        else:
            ans+='\n'
    else:
        ans+=a[x]
    x+=1
snip.rv=ans
`
endsnippet

# vim:ft=snippets:
