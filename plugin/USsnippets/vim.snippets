priority -50

###########################################################################
#                            SnipMate Snippets                            #
###########################################################################
snippet gvar "Global / configuration variable" b
if !exists("g:${1:MyUltraImportantVar}")
	let g:$1 = ${2:"${3:<tab>}"}
endif
endsnippet

snippet guard "script reload guard" b
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}') || &cp${2: || version < 700}
	finish
endif
let $1 = 1$3
endsnippet

snippet f "function" b
fun ${1:function_name}($2)
	${3:" code}
endf
endsnippet


snippet comm "Comment" A
`!p 
a = snip.v.text
ans = "\""

for x in a:
    if x == '\n':
        ans+="\n\""
    else:
        ans+=x

snip.rv=ans[:-1]
`
endsnippet


snippet uncomm "Uncomment" A
`!p 
a = snip.v.text
ans=""
x=0
if a[0]=='\"':
    x=1
else:
    x=0

while x<len(a):
    if a[x] == '\n':
        if x<len(a)-1 and a[x+1]=='\"':
            ans+='\n'
            x+=1
        else:
            ans+='\n'
    else:
        ans+=a[x]
    x+=1
snip.rv=ans
`
endsnippet

# vim:ft=snippets:
